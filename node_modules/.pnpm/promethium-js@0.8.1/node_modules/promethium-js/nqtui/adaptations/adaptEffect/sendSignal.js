import addAsyncEffect from "./addAsyncEffect";
import addRenderEffect from "./addRenderEffect";
export default function sendSignal(effect, execute, fn, signal, depArray) {
    if (signal === "stale") {
        effect.staleStateValuesCount++;
        effect.falseAlarmSignalsCount++;
    }
    else if (signal === "fresh" || signal === "falseAlarm") {
        effect.staleStateValuesCount--;
        if (signal === "falseAlarm") {
            effect.falseAlarmSignalsCount--;
        }
        if (effect.staleStateValuesCount <= 0) {
            if (effect.falseAlarmSignalsCount > 0) {
                executeMap[effect.type](effect, execute, fn, depArray);
            }
            effect.falseAlarmSignalsCount = 0;
            effect.staleStateValuesCount = 0;
        }
    }
}
const executeMap = {
    sync: (effect, execute, fn, depArray) => execute(effect, fn, depArray),
    async: (effect, execute, fn, depArray) => addAsyncEffect(() => execute(effect, fn, depArray)),
    render: (effect, execute, fn, depArray) => addRenderEffect(() => execute(effect, fn, depArray)),
};
